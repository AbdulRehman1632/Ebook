let progress=0,startX=0,active=0,isDown=!1;const speedWheel=.02,speedDrag=-.1,debounce=(e,t)=>{let s;return function(){const n=this,o=arguments;clearTimeout(s),s=setTimeout((()=>{e.apply(n,o)}),t)}},getZindex=(e,t)=>e.map(((s,n)=>t===n?e.length:e.length-Math.abs(t-n))),$items=document.querySelectorAll(".caro-item"),$cursors=document.querySelectorAll(".cursor"),displayItems=(e,t,s)=>{const n=getZindex([...$items],s)[t];e.style.setProperty("--zIndex",n),e.style.setProperty("--active",(t-s)/$items.length)},animate=()=>{progress=Math.max(0,Math.min(progress,100)),active=Math.floor(progress/100*($items.length-1)),$items.forEach(((e,t)=>displayItems(e,t,active)))};animate(),$items.forEach(((e,t)=>{e.addEventListener("click",(()=>{progress=t/$items.length*100+10,animate()}))}));const handleWheel=debounce((e=>{const t=.02*e.deltaY;progress+=t,animate()}),20),handleMouseMove=debounce((e=>{if("mousemove"===e.type&&$cursors.forEach((t=>{t.style.transform=`translate(${e.clientX}px, ${e.clientY}px)`})),!isDown)return;const t=e.clientX||e.touches&&e.touches[0].clientX||0;progress+=-.1*(t-startX),startX=t,animate()}),20),handleMouseDown=e=>{isDown=!0,startX=e.clientX||e.touches&&e.touches[0].clientX||0},handleMouseUp=()=>{isDown=!1};document.addEventListener("mousewheel",handleWheel),document.addEventListener("mousedown",handleMouseDown),document.addEventListener("mousemove",handleMouseMove),document.addEventListener("mouseup",handleMouseUp),document.addEventListener("touchstart",handleMouseDown),document.addEventListener("touchmove",handleMouseMove),document.addEventListener("touchend",handleMouseUp);